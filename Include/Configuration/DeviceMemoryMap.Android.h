#ifndef _DEVICE_MEMORY_MAP_H_
#define _DEVICE_MEMORY_MAP_H_

#include <Library/ArmLib.h>

#define MAX_ARM_MEMORY_REGION_DESCRIPTOR_COUNT 64

/* Below flag is used for system memory */
#define SYSTEM_MEMORY_RESOURCE_ATTR_CAPABILITIES                               \
  EFI_RESOURCE_ATTRIBUTE_PRESENT | EFI_RESOURCE_ATTRIBUTE_INITIALIZED |        \
      EFI_RESOURCE_ATTRIBUTE_TESTED | EFI_RESOURCE_ATTRIBUTE_UNCACHEABLE |     \
      EFI_RESOURCE_ATTRIBUTE_WRITE_COMBINEABLE |                               \
      EFI_RESOURCE_ATTRIBUTE_WRITE_THROUGH_CACHEABLE |                         \
      EFI_RESOURCE_ATTRIBUTE_WRITE_BACK_CACHEABLE |                            \
      EFI_RESOURCE_ATTRIBUTE_EXECUTION_PROTECTABLE

typedef enum { NoHob, AddMem, AddDev, HobOnlyNoCacheSetting, MaxMem } DeviceMemoryAddHob;

#define MEMORY_REGION_NAME_MAX_LENGTH 32

typedef struct {
  CHAR8                        Name[MEMORY_REGION_NAME_MAX_LENGTH];
  EFI_PHYSICAL_ADDRESS         Address;
  UINT64                       Length;
  DeviceMemoryAddHob           HobOption;
  EFI_RESOURCE_TYPE            ResourceType;
  EFI_RESOURCE_ATTRIBUTE_TYPE  ResourceAttribute;
  EFI_MEMORY_TYPE              MemoryType;
  ARM_MEMORY_REGION_ATTRIBUTES ArmAttributes;
} ARM_MEMORY_REGION_DESCRIPTOR_EX, *PARM_MEMORY_REGION_DESCRIPTOR_EX;

#define MEM_RES EFI_RESOURCE_MEMORY_RESERVED
#define MMAP_IO EFI_RESOURCE_MEMORY_MAPPED_IO
#define SYS_MEM EFI_RESOURCE_SYSTEM_MEMORY

#define SYS_MEM_CAP SYSTEM_MEMORY_RESOURCE_ATTR_CAPABILITIES
#define INITIALIZED EFI_RESOURCE_ATTRIBUTE_INITIALIZED
#define WRITE_COMBINEABLE EFI_RESOURCE_ATTRIBUTE_WRITE_COMBINEABLE
#define UNCACHEABLE EFI_RESOURCE_ATTRIBUTE_UNCACHEABLE

#define Reserv EfiReservedMemoryType
#define Conv EfiConventionalMemory
#define BsData EfiBootServicesData
#define RtData EfiRuntimeServicesData
#define LdData EfiLoaderData
#define MmIO EfiMemoryMappedIO
#define MaxMem EfiMaxMemoryType
#define BsCode EfiBootServicesCode
#define RtCode EfiRuntimeServicesCode

#define NS_DEVICE ARM_MEMORY_REGION_ATTRIBUTE_DEVICE
#define WRITE_THROUGH ARM_MEMORY_REGION_ATTRIBUTE_WRITE_THROUGH
#define WRITE_THROUGH_XN ARM_MEMORY_REGION_ATTRIBUTE_WRITE_THROUGH
#define WRITE_BACK ARM_MEMORY_REGION_ATTRIBUTE_WRITE_BACK
#define WRITE_BACK_XN ARM_MEMORY_REGION_ATTRIBUTE_WRITE_BACK
#define UNCACHED_UNBUFFERED ARM_MEMORY_REGION_ATTRIBUTE_UNCACHED_UNBUFFERED
#define UNCACHED_UNBUFFERED_XN ARM_MEMORY_REGION_ATTRIBUTE_UNCACHED_UNBUFFERED

static ARM_MEMORY_REGION_DESCRIPTOR_EX gDeviceMemoryDescriptorEx[] = {
    /* Name               Address     Length      HobOption        ResourceAttribute    ArmAttributes */
    {"Reserved",          0x00000000, 0x00001000, AddMem, SYS_MEM, SYS_MEM_CAP,     Reserv, NS_DEVICE},
    {"Free Memory 0",     0x00001000, 0x0007F000, AddMem, SYS_MEM, SYS_MEM_CAP,     Conv,   WRITE_BACK},
    {"UEFI FD",           0x00080000, 0x00180000, AddMem, SYS_MEM, SYS_MEM_CAP,     BsCode, WRITE_BACK},
    {"Free Memory 1",     0x00200000, 0x00A00000, AddMem, SYS_MEM, SYS_MEM_CAP,     Conv,   WRITE_BACK},
    {"UEFI Stack PEI",    0x00C00000, 0x00040000, AddMem, SYS_MEM, SYS_MEM_CAP,     BsData, WRITE_BACK},
    {"Free Memory 2",     0x00C40000, 0x027C0000, AddMem, SYS_MEM, SYS_MEM_CAP,     Conv,   WRITE_BACK},
    {"DFPS Data Mem",     0x03400000, 0x00001000, AddMem, SYS_MEM, SYS_MEM_CAP,     Reserv, NS_DEVICE},
    {"Cont Splash",       0x03401000, 0x02200000, AddMem, MEM_RES, WRITE_THROUGH,   MaxMem, WRITE_THROUGH},
    {"Free Memory 3",     0x05601000, 0x00CFF000, AddMem, SYS_MEM, SYS_MEM_CAP,     Conv,   WRITE_BACK},
    {"Modem and Periph",  0x06300000, 0x08400000, AddMem, SYS_MEM, SYS_MEM_CAP,     Reserv, NS_DEVICE},
    {"Free Memory 4",     0x0E700000, 0x71900000, AddMem, SYS_MEM, SYS_MEM_CAP,     Conv,   WRITE_BACK},
    /* DDR Bank 2 */
    {"Free Memory 5",     0x80000000, 0x2C1C0000, AddMem, SYS_MEM, SYS_MEM_CAP,     Conv,   WRITE_BACK},
    {"Reserved 2",        0xac1c0000, 0x00001000, AddMem, SYS_MEM, SYS_MEM_CAP,     Reserv, NS_DEVICE},
    {"Free Memory 6",     0xac1c1000, 0x3323F000, AddMem, SYS_MEM, SYS_MEM_CAP,     Conv,   WRITE_BACK},
    {"Audio",             0xdf400000, 0x00614000, AddMem, SYS_MEM, SYS_MEM_CAP,     Reserv, NS_DEVICE},
    {"Free Memory 7",     0xDFA14000, 0x001EC000, AddMem, SYS_MEM, SYS_MEM_CAP,     Conv,   WRITE_BACK},
    {"QSEE",              0xdfc00000, 0x01800000, AddMem, SYS_MEM, SYS_MEM_CAP,     Reserv, NS_DEVICE},
    {"ADSP Memory",       0xe1400000, 0x03F00000, AddMem, SYS_MEM, SYS_MEM_CAP,     Reserv, NS_DEVICE},
    {"Free Memory 8",     0xE5300000, 0x00100000, AddMem, SYS_MEM, SYS_MEM_CAP,     Conv,   WRITE_BACK},
    {"Secure Memory",     0xe5400000, 0x12c00000, AddMem, MMAP_IO, INITIALIZED,     Reserv, NS_DEVICE},
    /* Other memory regions */
    {"IMEM SMEM Base",    0xFE805000, 0x00001000, NoHob,  MMAP_IO, INITIALIZED,     Conv,   NS_DEVICE},
#if SILICON_PLATFORM == 8992
    {"IMEM Cookie Base",  0xFE80F000, 0x00001000, AddDev, MMAP_IO, INITIALIZED,     Conv,   NS_DEVICE},
#else
    {"IMEM Cookie Base",  0xFE87F000, 0x00001000, AddDev, MMAP_IO, INITIALIZED,     Conv,   NS_DEVICE},
#endif
    /* Register regions */
    {"TERMINATOR",        0xF9000000, 0x00113000, AddDev, MMAP_IO, UNCACHEABLE,  MmIO,   NS_DEVICE},
    {"GCC CLK CTL",       0xFC400000, 0x00002000, AddDev, MMAP_IO, UNCACHEABLE,  MmIO,   NS_DEVICE},
    {"RPM MSG RAM",       0xFC428000, 0x00008000, AddDev, MMAP_IO, UNCACHEABLE,  MmIO,   NS_DEVICE},
    {"MMSS",              0xFD800000, 0x001DC000, AddDev, MMAP_IO, UNCACHEABLE,  MmIO,   NS_DEVICE},
    {"MPM2 MPM",          0xFC4A0000, 0x0000C000, AddDev, MMAP_IO, UNCACHEABLE,  MmIO,   NS_DEVICE},
    {"PMIC ARB SPMI",     0xFC4C0000, 0x00010000, AddDev, MMAP_IO, UNCACHEABLE,  MmIO,   NS_DEVICE},
    {"CRYPTO0 CRYPTO",    0xFD404000, 0x0001C000, AddDev, MMAP_IO, UNCACHEABLE,  MmIO,   NS_DEVICE},
    {"CRYPTO1 CRYPTO",    0xFD444000, 0x0001C000, AddDev, MMAP_IO, UNCACHEABLE,  MmIO,   NS_DEVICE},
    {"CRYPTO2 CRYPTO",    0xFD3C4000, 0x0001C000, AddDev, MMAP_IO, UNCACHEABLE,  MmIO,   NS_DEVICE},
    {"Security Ctrl",     0xFC4B8000, 0x00007000, AddDev, MMAP_IO, UNCACHEABLE,  MmIO,   NS_DEVICE},
    {"SS SDC1/2/3/4",     0xF9800000, 0x000E7000, AddDev, MMAP_IO, UNCACHEABLE,  MmIO,   NS_DEVICE},
    {"SS BLSP1/2",        0xF9900000, 0x00069000, AddDev, MMAP_IO, UNCACHEABLE,  MmIO,   NS_DEVICE},
    {"SS USBOTG",         0xF9A40000, 0x00016000, AddDev, MMAP_IO, UNCACHEABLE,  MmIO,   NS_DEVICE},
    {"SS USB3PHY",        0xF9B38000, 0x00008000, AddDev, MMAP_IO, UNCACHEABLE,  MmIO,   NS_DEVICE},
    {"USB30 PRIM",        0xF9200000, 0x0010D000, AddDev, MMAP_IO, UNCACHEABLE,  MmIO,   NS_DEVICE},
    {"PERIPH_SS_PRNG",    0xF9BFF000, 0x00001000, AddDev, MMAP_IO, UNCACHEABLE,  MmIO,   NS_DEVICE},
    {"TLMM CSR",          0xFD510000, 0x00004000, AddDev, MMAP_IO, UNCACHEABLE,  MmIO,   NS_DEVICE},
    {"TCSR TCSR MUTEX",   0xFD484000, 0x00002000, AddDev, MMAP_IO, UNCACHEABLE,  MmIO,   NS_DEVICE},
    {"TCSR TCSR REGS",    0xFD4A0000, 0x00010000, AddDev, MMAP_IO, UNCACHEABLE,  MmIO,   NS_DEVICE},
    /* Both PCIe0 and PCIe1 will be initialized on LA */
    {"PCIE WRAPPER AXI 0",  0xFF000000, 0x00800000, AddDev, MMAP_IO, UNCACHEABLE,  MmIO,   NS_DEVICE},
    {"PCIE WRAPPER AHB 0",  0xFC520000, 0x00008000, AddDev, MMAP_IO, UNCACHEABLE,  MmIO,   NS_DEVICE},
    {"PCIE WRAPPER AXI 1",  0xF8800000, 0x00800000, AddDev, MMAP_IO, UNCACHEABLE,  MmIO,   NS_DEVICE},
    {"PCIE WRAPPER AHB 1",  0xFC528000, 0x00008000, AddDev, MMAP_IO, UNCACHEABLE,  MmIO,   NS_DEVICE},

    /* Terminator for MMU */
    {"Terminator", 0, 0, 0, 0, 0, 0, 0}};

#endif
